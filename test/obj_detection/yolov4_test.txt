# clone darknet repo
!git clone https://github.com/AlexeyAB/darknet

# change makefile to have GPU and OPENCV enabled
%cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile

# verify CUDA
!/usr/local/cuda/bin/nvcc --version

# make darknet (builds darknet so that you can then use the darknet executable file to run or train object detectors)
!make

# define helper functions
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
  %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

# use this to upload files
def upload():
  from google.colab import files
  uploaded = files.upload() 
  for name, data in uploaded.items():
    with open(name, 'wb') as f:
      f.write(data)
      print ('saved file', name)

# use this to download a file  
def download(path):
  from google.colab import files
  files.download(path)

from google.colab import drive
drive.mount('/content/drive')

!unzip -q "/content/drive/MyDrive/비전/testdata_yolo/test.zip" -d /content/darknet/data/

#weight
!unzip -q "/content/drive/MyDrive/비전/yoloweight/yolov4-obj_best.zip" -d /content/darknet/

!pwd

# need to set our custom cfg to test mode 
%cd cfg
!sed -i 's/batch=64/batch=1/' cp.cfg
!sed -i 's/subdivisions=16/subdivisions=1/' cp.cfg
%cd ..

!./darknet detector test data/obj.data cfg/cp.cfg cp_last.weights -dont_show -ext_output <data/test.txt> result.txt

!git clone https://github.com/Cartucho/mAP.git


!cp result.txt mAP/scripts/extra 

%cd mAP/scripts/extra 

!pwd

!ls

!python convert_dr_yolo.py
